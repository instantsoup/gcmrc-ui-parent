<configuration>
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
<!--		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>INFO</level>
		</filter>-->
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%t] GCMRC-SERVICES %5p %logger{20} - %m%n</pattern>
		</encoder>
	</appender>
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
<!--		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>TRACE</level>
		</filter>-->
		<file>${catalina.base}/logs/gcmrc.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${catalina.base}/logs/gcmrc/gcmrc-services.%d{yyyy-MM-dd}.log</fileNamePattern>
			<maxHistory>7</maxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} [%t] GCMRC-SERVICES %5p %logger{20} - %m%n</pattern>
		</encoder>
	</appender>
	
	<logger name="gov.usgs.cida.gcmrcservices.nude.time" level="INFO"/>
	
	<!--
	Set logging for Spec to TRACE to enable logging for:
	* Full SQL and parameters for Select statements
	* Partial and total fetch time (time spent calling resultSet.next())
	
	This can help debug performance issues, but will put a log of stuff in the logs.
	
	Slow queries (queries that take over 30 seconds to return w/ init results)
	will be logged by default at the WARN level, and will include full SQL and params.
	-->
	<!--<logger name="gov.usgs.webservices.jdbc.spec.Spec" level="TRACE"/>-->
	<logger name="gov.usgs.webservices.jdbc.service" level="DEBUG"/>
	<logger name="gov.usgs.cida.nude" level="DEBUG"/>
	<logger name="gov.usgs.cida.nude.filter" level="INFO"/>
	<logger name="org.apache" level="INFO"/>
	<logger name="gov.usgs.cida.proxy" level="INFO"/>
	<logger name="gov.usgs.cida.gcmrcservices.mb.mappers" level="DEBUG"/>
	<root level="INFO">
		<appender-ref ref="stdout" />
		<appender-ref ref="FILE" />
	</root>
</configuration>